version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@1.0.0
  aws-ecs: circleci/aws-ecs@0.0.6
  aws-cli: circleci/aws-cli@3.1.1

commands:
  deploy:
    steps:
      - run:
          name: deploy
          command: |
            set -x

            aws --version

            echo "any deploy command"

jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/test-circleci

    steps:
      - checkout:
          path: ~/test-circleci

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: sudo chmod 777 ./gradlew
      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run: ./gradlew test
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true

      - run: ./gradlew build
      - run: sudo ls ./build/libs/
      - run: docker image build -t spring-docker-demo:0.0.1 ./
#      - run: docker run -it -p 8080:8080 spring-docker-demo:0.0.1
#      - run: curl -X GET http://localhost:8080/
      - aws-cli/install
      - deploy
      - run: aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ECR_ACCOUNT_URL}
      - run: docker tag spring-docker-demo:0.0.1 ${AWS_ECR_ACCOUNT_URL}/spring-docker-todolist3:0.0.1
      - run: docker push ${AWS_ECR_ACCOUNT_URL}/spring-docker-todolist3:0.0.1
#      - aws-ecs/deploy-service-update:
#        family: AWS_FARGATE_TASK_NAME
#        service-name: AWS_FARGATE_SERVICE_NAME
#        cluster-name: AWS_FARGATE_CLUSTER_NAME
#        container-image-name-updates: 'container=spring-docker-todolist3,image-and-tag=${AWS_ECR_ACCOUNT_URL}/spring-docker-todolist3:0.0.1'


